# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Map static resources from the /public folder to the /assets URL path
GET     /api-v3/static/*file              controllers.Assets.at(path="/public", file)

# API routes
GET     /api-v3/datasets                         controllers.DatasetController.listAll(limit: Int ?= 20, offset: Int ?= 0)
GET     /api-v3/datasets/:id                     controllers.DatasetController.getDataset(id: String)
GET     /api-v3/datasets/:id/time                controllers.DatasetController.getTemporalProfile(id: String)
GET     /api-v3/datasets/:id/items               controllers.DatasetController.listAnnotatedThings(id: String, limit: Int ?= 20, offset: Int ?= 0)
GET     /api-v3/datasets/:id/places              controllers.DatasetController.listPlaces(id: String, limit: Int ?= 20, offset: Int ?= 0)

GET     /api-v3/items                            controllers.AnnotatedThingController.listAll(limit: Int ?= 20, offset: Int ?= 0)
GET     /api-v3/items/:id                        controllers.AnnotatedThingController.getAnnotatedThing(id: String)
GET     /api-v3/items/:id/items                  controllers.AnnotatedThingController.listSubThings(id: String, limit: Int ?= 20, offset: Int ?= 0)
GET     /api-v3/items/:id/places                 controllers.AnnotatedThingController.listPlaces(id: String, limit: Int ?= 20, offset: Int ?= 0)
GET     /api-v3/items/:id/annotations            controllers.AnnotatedThingController.listAnnotations(id: String, limit: Int ?= 20, offset: Int ?= 0)

GET     /api-v3/annotations                      controllers.AnnotationController.listAll(limit: Int ?= 20, offset: Int ?= 0)
GET     /api-v3/annotations/:id                  controllers.AnnotationController.getAnnotation(id: java.util.UUID)

GET     /api-v3/places                           controllers.PlaceController.listAll(gazetteer: String, bbox: Option[String], limit: Option[Int], offset: Option[Int])
GET     /api-v3/places/:uri                      controllers.PlaceController.getPlace(uri: String)
GET     /api-v3/places/:uri/network              controllers.PlaceController.getNetwork(uri: String)
GET     /api-v3/places/:uri/occurrences          controllers.PlaceController.listOccurrences(uri: String, includeCloseMatches: Boolean ?= true)

GET     /api-v3/search                           controllers.SearchController.search(limit: Int ?= 20, offset: Int ?= 0, query: Option[String], type: Option[String], dataset: Option[String], places: Option[String], from: Option[Int], to: Option[Int], bbox: Option[String], lon: Option[Double], lat: Option[Double], radius: Option[Double])

# HTML view routes
GET     /api-v3/pages/items/:id                  controllers.pages.AnnotatedThingPagesController.getAnnotatedThing(id: String)
GET     /api-v3/pages/datasets                   controllers.pages.DatasetPagesController.listAll
GET     /api-v3/pages/datasets/:id               controllers.pages.DatasetPagesController.getDataset(id: String)
GET     /api-v3/pages/places/:uri                controllers.pages.PlacePagesController.getPlace(uri: String)
GET     /api-v3/pages/gazetteers/:name           controllers.pages.PlacePagesController.showGazetteer(name)
GET     /api-v3/pages/search                     controllers.pages.HomepageController.search(limit: Int ?= 20, offset: Int ?= 0, query: Option[String], type: Option[String], dataset: Option[String], places: Option[String], from: Option[Int], to: Option[Int])
GET     /api-v3/pages/advanced-search            controllers.pages.HomepageController.defineAdvancedSearch
GET     /api-v3/                                 controllers.pages.HomepageController.index 
GET     /api-v3                                  controllers.pages.HomepageController.index

# Auth
GET     /api-v3/login                            controllers.admin.AuthController.login
POST    /api-v3/login                            controllers.admin.AuthController.authenticate
GET     /api-v3/logout                           controllers.admin.AuthController.logout

# Admin
GET     /api-v3/admin/datasets                   controllers.admin.DatasetAdminController.index
POST    /api-v3/admin/datasets                   controllers.admin.DatasetAdminController.uploadDataset
DELETE  /api-v3/admin/datasets/:id               controllers.admin.DatasetAdminController.deleteDataset(id: String)
POST    /api-v3/admin/datasets/:id/annotations   controllers.admin.DatasetAdminController.uploadAnnotations(id: String)
POST    /api-v3/admin/datasets/:id/harvests      controllers.admin.DatasetAdminController.harvestDataset(id: String)

GET     /api-v3/admin/gazetteers                 controllers.admin.GazetteerAdminController.index
DELETE  /api-v3/admin/gazetteers/:name           controllers.admin.GazetteerAdminController.deleteGazetteer(name: String)
